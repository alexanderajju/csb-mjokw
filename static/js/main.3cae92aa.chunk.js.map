{"version":3,"sources":["App.js","index.js"],"names":["App","useState","id","name","fruit","setFruits","useEffect","a","fetch","then","response","json","data","getFruits","className","style","width","margin","items","onSearch","string","results","onHover","result","onSelect","item","alert","onFocus","onClear","autoFocus","rootElement","document","getElementById","ReactDOM","render"],"mappings":"iLAoFeA,MAjFf,WAGE,MAA2BC,mBAAS,CAClC,CACEC,GAAI,EACJC,KAAM,SAER,CACED,GAAI,EACJC,KAAM,UAER,CACED,GAAI,EACJC,KAAM,YAXV,mBAAOC,EAAP,KAAcC,EAAd,KA2DA,OAzCAC,qBAAU,YAEO,uCAAG,sBAAAC,EAAA,sEACVC,MAAM,8CACTC,MAAK,SAACC,GAAD,OAAcA,EAASC,UAC5BF,MAAK,SAACG,GAELP,EAAUO,MALE,2CAAH,qDAWfC,KAEC,IA2BD,qBAAKC,UAAU,MAAf,SACE,wBAAQA,UAAU,aAAlB,SACE,qBAAKC,MAAO,CAAEC,MAAO,IAAKC,OAAQ,IAAlC,SACE,cAAC,0BAAD,CACEC,MAAOd,EACPe,SA3BW,SAACC,EAAQC,KA4BpBC,QAxBU,SAACC,KAyBXC,SArBW,SAACC,GAEpBC,MAAMD,EAAKtB,OAoBHwB,QAjBU,aAkBVC,QAdU,aAeVC,WAAS,WCvEfC,EAAcC,SAASC,eAAe,QAC5CC,IAASC,OACP,cAAC,aAAD,UACE,cAAC,EAAD,MAEFJ,K","file":"static/js/main.3cae92aa.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { ReactSearchAutocomplete } from \"react-search-autocomplete\";\n\nfunction App() {\n\n// useState is react hook used for storing data\n  const [fruit, setFruits] = useState([\n    {\n      id: 0,\n      name: \"Apple\"\n    },\n    {\n      id: 1,\n      name: \"Orange\"\n    },\n    {\n      id: 2,\n      name: \"Banana\"\n    }\n  ]);\n// A sample of fruits are used for this is given below, \n  // https://postmanmaster.herokuapp.com/fruit/\n\n// Use effect is used to call the api when the page loads\n  useEffect(() => {\n    // In order to wait for any delay or promise\n    const getFruits = async () => {\n      await fetch(\"https://postmanmaster.herokuapp.com/fruit/\")\n        .then((response) => response.json())\n        .then((data) => {\n//  Depending upon the data received from the api code chages \n          setFruits(data);\n          // Console.log is used to print the result in the console of the browser\n          // data.map((a) => console.log([{ id: a.id, name: a.name }]));\n        });\n    };\n\n    getFruits();\n    // console.log(\"fruits>>>>>>>>>>\", fruit);\n  }, []);\n\n\n// Intializing the functions of ReactSearchAutocomplete\n  \nconst handleOnSearch = (string, results) => {\n    // console.log(string, results);\n  };\n\nconst handleOnHover = (result) => {\n    // console.log(result);\n  };\n\nconst handleOnSelect = (item) => {\n    // console.log(item);\n    alert(item.name);\n  };\n\nconst handleOnFocus = () => {\n    // console.log(\"Focused\");\n  };\n\nconst handleOnClear = () => {\n    // console.log(\"Cleared\");\n  };\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div style={{ width: 200, margin: 20 }}>\n          <ReactSearchAutocomplete\n            items={fruit}\n            onSearch={handleOnSearch}\n            onHover={handleOnHover}\n            onSelect={handleOnSelect}\n            onFocus={handleOnFocus}\n            onClear={handleOnClear}\n            autoFocus\n          />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import { StrictMode } from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <StrictMode>\n    <App />\n  </StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}